{"version":3,"sources":["Slider.js","ColorPicker1.js","ColorPicker2.js","Effects.js","Bulb.js","App.js","serviceWorker.js","index.js"],"names":["Slider","brightnessChange","color","className","label","min","max","dataIndex","prependToValue","appendToValue","labelColor","labelBottom","labelFontSize","knobColor","progressColorFrom","progressColorTo","progressSize","trackColor","trackSize","knobeDraggable","onChange","ColorPicker1","this","props","colorChange","style","display","justifyContent","outline","disableAlpha","width","presetColors","React","Component","ColorPicker2","height","Effects","effectChange","speedChange","speed","speedDisable","value","iconSize","Typography","id","gutterBottom","disabled","aria-labelledby","Bulb","powerChange","power","IconButton","aria-label","onClick","size","App","state","effect","Brightness","R","G","B","onBrightnessChange","event","setState","postData","onColorChange","rgb","r","g","b","hex","onEffectChange","effectvalue","onSpeedChange","speedValue","onPowerChange","debounce","formdata","FormData","Object","keys","forEach","k","append","fetch","method","body","redirect","then","response","text","result","console","log","catch","error","dragging","swiping","wrapAround","heightMode","defaultControlsConfig","nextButtonText","prevButtonText","nextButtonStyle","background","prevButtonStyle","pagingDotsStyle","fill","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9f8118ce.chunk.js","sourcesContent":["import React from 'react';\nimport CircularSlider from '@fseehawer/react-circular-slider';\n\nconst Slider = ({ brightnessChange, color }) => {\n  return (\n    <div className=\"tc pb4\">\n      <CircularSlider\n        label=\"Brightness\"\n        min={0}\n        max={100}\n        dataIndex={20}\n        prependToValue=\"\"\n        appendToValue=\"%\"\n        labelColor=\"#fff\"\n        labelBottom={true}\n        labelFontSize=\"20px\"\n        knobColor=\"#005a58\"\n        progressColorFrom='#fff'\n        progressColorTo={color}\n        progressSize={20}\n        trackColor=\"#eeeeee\"\n        trackSize={24}\n        knobeDraggable={false}\n        onChange={brightnessChange}\n      ></CircularSlider>      \n    </div>\n  );\n};\n\nexport default Slider;\n","import React from 'react';\nimport { SketchPicker } from 'react-color';\n\nclass ColorPicker1 extends React.Component {\n  render() {\n    const { colorChange, color } = this.props;\n\n    return (\n      <div\n        style={{ display: 'flex', justifyContent: 'center', outline: '0px solid transparent' }}\n      >\n        <SketchPicker\n          style={{ outline: 'none' }}\n          disableAlpha={true}\n          width={260}\n          color={color}\n          onChange={colorChange}\n          presetColors={[]}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ColorPicker1;\n","import React from 'react';\nimport { SwatchesPicker } from 'react-color';\n\nclass ColorPicker2 extends React.Component {\n  render() {\n    const { colorChange, color } = this.props;\n\n    return (\n      <div\n        style={{ display: 'flex', justifyContent: 'center' }}\n      >\n        <SwatchesPicker\n          disableAlpha={true}\n          width={275}\n          height={265}\n          color={color}\n          onChange={colorChange}\n          presetColors={[]}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ColorPicker2;\n","import React from 'react';\nimport { RadioGroup, RadioButton } from 'react-radio-buttons';\n\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\n\nconst Effects = ({ effectChange, speedChange, speed, speedDisable }) => {\n  \n  return (\n    <div className='ph5'>\n      <RadioGroup value='0' onChange={ effectChange }>\n        <RadioButton value=\"1\" iconSize={20}>\n          No-effects\n        </RadioButton>\n        <RadioButton value=\"2\" iconSize={20}>\n          Fade\n        </RadioButton>\n        <RadioButton value=\"3\" iconSize={20}>\n          Colour Change\n        </RadioButton>\n        </RadioGroup>\n\n        <div>\n          <Typography id=\"continuous-slider\" gutterBottom>\n            Speed\n          </Typography>\n          <Slider disabled={speedDisable} value={speed} onChange={speedChange} aria-labelledby=\"continuous-slider\" />\n        </div>        \n    </div>\n  );\n};\n\nexport default Effects;","import React from 'react';\nimport { IconButton } from '@material-ui/core';\nimport { FaLightbulb } from \"react-icons/fa\";\nimport { FaRegLightbulb } from \"react-icons/fa\";\n\nconst Bulb = ({color, powerChange, power }) => {\n  return (\n    <div className=\"tc pv5\">\n      <div className='' style={{display:'flex-inline', justifyContent:'center'}}>\n        <IconButton aria-label=\"delete\" onClick={powerChange}>\n          {power ? ( <FaLightbulb size='7em' color={color} /> )\n                 : ( <FaRegLightbulb size='7em' color={color} /> )\n          }\n        </IconButton>\n      </div>\n    </div>\n  );\n};\n\nexport default Bulb;\n","import React, { Component } from 'react';\nimport Slider from './Slider';\nimport ColorPicker1 from './ColorPicker1';\nimport ColorPicker2 from './ColorPicker2';\nimport Carousel from 'nuka-carousel';\nimport './App.css';\nimport { IoIosArrowDropleftCircle, IoIosArrowDroprightCircle } from \"react-icons/io\";\nimport Effects from './Effects';\nimport Bulb from './Bulb';\nimport {debounce} from 'lodash';\n\nclass App extends Component {\n  state = {\n    power:true,\n    effect: 1,\n    speed:30,\n    Brightness: 20,\n    R: 156,\n    G: 39,\n    B: 176,\n    color: '#9C27B0',\n    speedDisable:true\n  };\n\n  onBrightnessChange = (event) => {\n    this.setState(({ Brightness: event }),\n    ()=> this.postData());\n  };\n\n  onColorChange = (color) => {\n    this.setState(({\n      R: color.rgb.r,\n      G: color.rgb.g,\n      B: color.rgb.b,\n      color: color.hex,\n    }),\n    () => this.postData());\n  };\n\n  onEffectChange = (effectvalue) => {\n    this.setState(({effect: effectvalue}),\n    () => this.postData());\n    // eslint-disable-next-line\n    if (effectvalue == 1){\n      this.setState({speedDisable: true});\n    } else {this.setState({speedDisable: false})}\n    \n  }\n\n  onSpeedChange = (event, speedValue) => {\n    this.setState(({speed: speedValue}),\n    () => this.postData());\n  }\n\n  onPowerChange = () => {\n    this.setState(({power: !this.state.power}),\n      () => this.postData());\n  }\n\n  postData = debounce(() => {\n    const formdata = new FormData();\n    Object.keys(this.state).forEach(k => {\n      formdata.append(k, this.state[k])\n    })\n\n    var requestOptions = {\n      method: 'POST',\n      body: formdata,\n      redirect: 'follow',\n    };\n\n    // fetch('http://192.168.1.12/postform/', requestOptions) // replace with esp ip\n    fetch('/postform/', requestOptions) // on hw ip is not needed\n      .then((response) => response.text())\n      .then((result) => console.log(result))\n      .catch((error) => console.log('error', error));\n  }, 300);\n\n  render() {\n    return (\n      <div>\n        <div> \n          <div>\n            <Bulb               \n              color={this.state.color}\n              powerChange={this.onPowerChange}\n              power={this.state.power} />\n          </div>\n          <div style={{display: 'flex', justifyContent: 'center'}}>\n            <Carousel\n              className={'slide'}\n              dragging={false}\n              swiping={false}\n              wrapAround={true}\n              width={'400px'}\n              heightMode={'max'}\n              defaultControlsConfig={{\n                nextButtonText: <IoIosArrowDroprightCircle size='1.6em' />,\n                prevButtonText: <IoIosArrowDropleftCircle size='1.6em'/>,\n                nextButtonStyle: {background:'none', outline:'none'},\n                prevButtonStyle: {background:'none', outline:'none'},\n                pagingDotsStyle: {fill: 'yellow', outline:'none'}\n              }}\n              >\n              <Slider brightnessChange={this.onBrightnessChange} color={this.state.color} />\n              <ColorPicker1 colorChange={this.onColorChange} color={this.state.color} />\n              <ColorPicker2 colorChange={this.onColorChange} color={this.state.color} />\n              <Effects\n                effectChange={this.onEffectChange}\n                speedChange={this.onSpeedChange}\n                speed={this.state.speed}\n                speedDisable={this.state.speedDisable}\n              />\n            </Carousel>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}